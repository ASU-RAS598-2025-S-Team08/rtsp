# ros_navigation_bridge.py
import rclpy
from rclpy.node import Node
from nav2_simple_commander.robot_navigator import BasicNavigator
from geometry_msgs.msg import PoseStamped

class Navigator(Node):
    def __init__(self):
        super().__init__('nav_client')
        self.navigator = BasicNavigator()

    def send_goal(self, x, y, yaw):
        goal = PoseStamped()
        goal.header.frame_id = 'map'
        goal.header.stamp = self.get_clock().now().to_msg()
        goal.pose.position.x = x
        goal.pose.position.y = y
        # Simple yaw rotation in quaternion (only for demonstration)
        from tf_transformations import quaternion_from_euler
        q = quaternion_from_euler(0, 0, yaw)
        goal.pose.orientation.x = q[0]
        goal.pose.orientation.y = q[1]
        goal.pose.orientation.z = q[2]
        goal.pose.orientation.w = q[3]

        self.navigator.goToPose(goal)
        return "goal sent"

navigator_node = None

def init_navigation():
    global navigator_node
    rclpy.init()
    navigator_node = Navigator()

def send_nav_goal(x, y, yaw=0.0):
    global navigator_node
    if not navigator_node:
        init_navigation()
    return navigator_node.send_goal(x, y, yaw)
